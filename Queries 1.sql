                                       -- TABLES:

CREATE TABLE STUDENT(
  SURNAME VARCHAR(20),
  GIVEN_NAMES VARCHAR(50),
  STUDENT_ID INT,
  DOB DATE,
  AGE INT UNSIGNED NOT NULL CHECK(AGE>=18),
  EMAIL VARCHAR(50) UNIQUE,
  PRIMARY KEY(STUDENT_ID)
);

CREATE TABLE PROGRAM (
  NAME VARCHAR(50) UNIQUE,
  CREDIT_POINTS INT,
  PROGRAM_ID INT,
  PRIMARY KEY(PROGRAM_ID)
);

-- 000 means program_id not assigned to course yet
CREATE TABLE COURSE(
  NAME VARCHAR(50),
  CREDIT_POINTS VARCHAR(50),
  COURSE_ID INT,
  PROGRAM_ID INT DEFAULT 000, 
  PRIMARY KEY(COURSE_ID),
  FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAM(PROGRAM_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

                                       -- RELATIONS:

CREATE TABLE ATTEMPTS(
  YEAR INT,
  MARK INT,
  SEMESTER VARCHAR(20),
  STUDENT_ID INT,
  COURSE_ID INT,
  PRIMARY KEY (STUDENT_ID, COURSE_ID, SEMESTER),
  FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ENROLL(
  STUDENT_ID INT,
  PROGRAM_ID INT,
  FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAM(PROGRAM_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

                                       -- INSERT DATA INTO TABLES

INSERT INTO STUDENT (SURNAME, GIVEN_NAMES, STUDENT_ID, DOB, AGE, EMAIL) 
VALUES ('Smith', 'John', 1, '2000-05-10', 25, 'john.smith@email.com');

INSERT INTO STUDENT (SURNAME, GIVEN_NAMES, STUDENT_ID, DOB, AGE, EMAIL) 
VALUES ('Doe', 'Jane', 2, '1998-08-25', 27, 'jane.doe@email.com');

INSERT INTO STUDENT (SURNAME, GIVEN_NAMES, STUDENT_ID, DOB, AGE, EMAIL) 
VALUES ('Brown', 'Michael', 3, '2001-01-15', 24, 'michael.brown@email.com');

INSERT INTO STUDENT (SURNAME, GIVEN_NAMES, STUDENT_ID, DOB, AGE, EMAIL) 
VALUES ('Taylor', 'Emily', 4, '1999-12-30', 26, 'emily.taylor@email.com');

INSERT INTO STUDENT (SURNAME, GIVEN_NAMES, STUDENT_ID, DOB, AGE, EMAIL) 
VALUES ('Wilson', 'David', 5, '2002-03-10', 23, 'david.wilson@email.com');

INSERT INTO PROGRAM (NAME, CREDIT_POINTS, PROGRAM_ID) 
VALUES ('Computer Science', 120, 1);

INSERT INTO PROGRAM (NAME, CREDIT_POINTS, PROGRAM_ID) 
VALUES ('Mathematics', 90, 2);

INSERT INTO PROGRAM (NAME, CREDIT_POINTS, PROGRAM_ID) 
VALUES ('Physics', 100, 3);

INSERT INTO PROGRAM (NAME, CREDIT_POINTS, PROGRAM_ID) 
VALUES ('Engineering', 150, 4);

INSERT INTO PROGRAM (NAME, CREDIT_POINTS, PROGRAM_ID) 
VALUES ('Biology', 110, 5);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID) 
VALUES ('Data Structures', '4', 101, 1);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID) 
VALUES ('Calculus I', '3', 102, 2);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID) 
VALUES ('Classical Mechanics', '4', 103, 3);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID) 
VALUES ('Introduction to Engineering', '5', 104, 4);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID) 
VALUES ('Genetics', '3', 105, 5);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Data Structures', '4', 111, 1);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Calculus I', '3', 112, 2);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Classical Mechanics', '4', 113, 3);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Introduction to Engineering', '5', 114, 4);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Genetics', '3', 115, 5);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Algorithms', '4', 106, 1);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Linear Algebra', '3', 107, 2);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Thermodynamics', '4', 108, 3);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Electrical Circuits', '5', 109, 4);

INSERT INTO COURSE (NAME, CREDIT_POINTS, COURSE_ID, PROGRAM_ID)  
VALUES ('Microbiology', '3', 110, 5);


INSERT INTO ATTEMPTS (YEAR, MARK, SEMESTER, STUDENT_ID, COURSE_ID) 
VALUES (2022, 85, 'Spring', 1, 101);

INSERT INTO ATTEMPTS (YEAR, MARK, SEMESTER, STUDENT_ID, COURSE_ID) 
VALUES (2022, 78, 'Fall', 2, 102);

INSERT INTO ATTEMPTS (YEAR, MARK, SEMESTER, STUDENT_ID, COURSE_ID) 
VALUES (2023, 92, 'Spring', 3, 103);

INSERT INTO ATTEMPTS (YEAR, MARK, SEMESTER, STUDENT_ID, COURSE_ID) 
VALUES (2023, 88, 'Fall', 4, 104);

INSERT INTO ATTEMPTS (YEAR, MARK, SEMESTER, STUDENT_ID, COURSE_ID) 
VALUES (2023, 90, 'Spring', 5, 105);

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (1, 1);

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (2, 2);

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (3, 3);

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (4, 4);

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (5, 5);

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (1, 1);  -- Student 1 (John Smith) in Computer Science

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (3, 1);  -- Student 3 (Michael Brown) in Computer Science

-- Adding students to Mathematics program (Program ID 2)
INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (2, 2);  -- Student 2 (Jane Doe) in Mathematics

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (4, 2);  -- Student 4 (Emily Taylor) in Mathematics

-- Adding students to Physics program (Program ID 3)
INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (5, 3);  -- Student 5 (David Wilson) in Physics

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (1, 3);  -- Student 1 (John Smith) in Physics

-- Adding students to Engineering program (Program ID 4)
INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (2, 4);  -- Student 2 (Jane Doe) in Engineering

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (3, 4);  -- Student 3 (Michael Brown) in Engineering

-- Adding students to Biology program (Program ID 5)
INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (4, 5);  -- Student 4 (Emily Taylor) in Biology

INSERT INTO ENROLL (STUDENT_ID, PROGRAM_ID) 
VALUES (5, 5);  -- Student 5 (David Wilson) in Biology


                                       -- SELECT COMMAND VARIATIONS

-- SELECT * FROM STUDENT;
-- SELECT * FROM ENROLL;
-- SELECT SURNAME, GIVEN_NAMES FROM STUDENT;
-- SELECT DISTINCT AGE FROM STUDENT;
-- SELECT DISTINCT EMAIL FROM STUDENT;
-- SELECT MAX(AGE) FROM STUDENT;
-- SELECT AGE>20 FROM STUDENT;
-- SELECT AGE FROM STUDENT WHERE AGE > 20;
-- SELECT * FROM STUDENT WHERE AGE > 20;
-- SELECT * FROM STUDENT WHERE AGE > 20 AND SURNAME="Smith";
-- SELECT * FROM STUDENT WHERE AGE > 20 OR SURNAME="Smith";
-- SELECT * FROM STUDENT WHERE AGE BETWEEN 20 AND 30;
-- SELECT * FROM STUDENT WHERE AGE IN (25, 27, 26);
-- SELECT * FROM PROGRAM WHERE PROGRAM_ID NOT IN (1, 2, 3);
-- SELECT * FROM STUDENT LIMIT 3
-- SELECT PROGRAM_ID, COUNT(NAME) FROM COURSE GROUP BY PROGRAM_ID;
-- SELECT AGE, GIVEN_NAMES FROM STUDENT WHERE STUDENT_ID IN (1,2,3) GROUP BY AGE, GIVEN_NAMES HAVING AGE < 30 ORDER BY AGE ASC
-- SELECT PROGRAM_ID, COUNT(STUDENT_ID) AS student_count FROM ENROLL GROUP BY PROGRAM_ID HAVING COUNT(STUDENT_ID)>1;
-- SELECT COURSE_ID, AVG(MARK) FROM ATTEMPTS GROUP BY COURSE_ID HAVING AVG(MARK)>80

                                       -- UPDATE COMMAND VARIARIONS

-- UPDATE STUDENT SET SURNAME = "Cena" WHERE SURNAME="SMITH";
-- SELECT * FROM STUDENT;

-- UPDATE STUDENT SET SURNAME = "Johnson" WHERE SURNAME="Doe";
-- SELECT * FROM STUDENT;

-- DELETE FROM STUDENT WHERE AGE<25;
-- SELECT * FROM STUDENT;

-- DELETE FROM ENROLL;
-- SELECT * FROM ENROLL;

-- DELETE FROM ATTEMPTS;
-- SELECT * FROM ATTEMPTS;
